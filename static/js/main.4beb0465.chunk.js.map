{"version":3,"sources":["assets/rss.png","firebase/context.js","components/HeaderLogin.jsx","components/HeaderBar.jsx","components/PageContainer.jsx","components/Dropdown.jsx","components/ResultTableHeader.jsx","components/StudentResultCell.jsx","components/ResultTableBody.jsx","components/ResultTable.jsx","pages/Home.jsx","pages/Landing.jsx","App.jsx","serviceWorker.js","config/firebase-config.js","firebase/index.js","firebase/firebase.js","index.jsx"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","HeaderLogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","loggedInUser","firebase","_this2","handleLoginUser","doSignInWithGithub","then","result","setState","doSignOut","_this3","selectedUser","react_default","a","createElement","context","Consumer","Button_default","variant","color","onClick","handleUserLogin","Fragment","Avatar_default","alt","displayName","src","photoURL","className","Typography_default","component","IconButton_default","handleUserSignOut","Close_default","Component","defaultProps","HeaderBar","AppBar_default","position","Toolbar_default","index_es","container","justify","alignItems","item","xs","src_components_HeaderLogin","PageContainer","children","Paper_default","elevation","Dropdown","handleChange","selectedOption","onChange","localStorage","setItem","JSON","stringify","getItem","parse","arr","react_select_esm","classNamePrefix","value","options","Data","mentorInfo","map","e","mentorGithub","replace","label","concat","name","surname","placeholder","ResultTableHeader","students","TableHead_default","TableRow_default","TableCell_default","key","studentNickname","rel","target","href","StudentResultCell","student","task","score","mentorScore","find","taskName","studentGithub","toLowerCase","endsWith","taskStatus","taskMark","ResultTableBody","TableBody_default","tasks","scope","padding","taskLink","components_StudentResultCell","ResultTable","selectedMentor","pairs","filter","mentorNickname","getStudents","Table_default","components_ResultTableHeader","components_ResultTableBody","Home","components_PageContainer","src_components_Dropdown","selectMentor","components_ResultTable","Landing","direction","spacing","rssImage","userLogin","App","components_HeaderBar","u","pages_Home","pages_Landing","Boolean","window","location","hostname","match","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","auth","signInWithPopup","githubProvider","signOut","app","initializeApp","GithubAuthProvider","ReactDOM","render","Provider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4beb0465.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rss.aa63da9d.png\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Close from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport Context from '../firebase/context';\nimport './HeaderLogin.scss';\n\nclass HeaderLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: props.loggedInUser };\n  }\n\n  handleUserLogin(firebase) {\n    const { handleLoginUser } = this.props;\n\n    firebase.doSignInWithGithub().then((result) => {\n      handleLoginUser(result.user);\n      this.setState({ user: result.user });\n    });\n  }\n\n  handleUserSignOut(firebase) {\n    const { handleLoginUser } = this.props;\n\n    handleLoginUser(null);\n    firebase.doSignOut();\n    this.setState({ user: null });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { loggedInUser } = this.props;\n\n    const selectedUser = user || loggedInUser;\n\n    if (selectedUser == null) {\n      return (\n        <Context.Consumer>\n          { firebase => <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleUserLogin(firebase)}>Log In</Button> }\n        </Context.Consumer>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Avatar alt={selectedUser.displayName} src={selectedUser.photoURL} className=\"userAvatar\" />\n        <Typography component=\"span\" color=\"inherit\" variant=\"subtitle2\">\n          {selectedUser.displayName}\n        </Typography>\n        <Context.Consumer>\n          { firebase => (\n            <IconButton color=\"inherit\" onClick={() => this.handleUserSignOut(firebase)}>\n              <Close />\n            </IconButton>\n          )}\n        </Context.Consumer>\n\n      </React.Fragment>);\n  }\n}\n\nHeaderLogin.propTypes = {\n  handleLoginUser: PropTypes.func.isRequired,\n  loggedInUser: PropTypes.shape({\n    displayName: PropTypes.string,\n    photoURL: PropTypes.string,\n  }),\n};\n\nHeaderLogin.defaultProps = {\n  loggedInUser: null,\n};\n\nexport default HeaderLogin;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport './HeaderBar.scss';\nimport { Grid } from '@material-ui/core';\nimport HeaderLogin from './HeaderLogin';\n\nfunction HeaderBar(props) {\n  return (\n    <div className=\"appBar\">\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"h6\" color=\"inherit\">Mentors dashboard</Typography>\n            </Grid>\n            <Grid item xs={6} container justify=\"flex-end\" alignItems=\"center\">\n              <HeaderLogin {...props} />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default HeaderBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport './PageContainer.scss';\n\nfunction PageContainer(props) {\n  const { children } = props;\n  return (\n    <Paper className=\"paper\" elevation={1}>\n      {children}\n    </Paper>\n  );\n}\n\nPageContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport './Dropdown.scss';\nimport Data from '../assets/data.json';\n\nfunction getMentors(arr) {\n  return arr.map(e => ({\n    value: e.mentorGithub && e.mentorGithub.replace('https://github.com/', ''),\n    label: `[${e.mentorGithub && e.mentorGithub.replace('https://github.com/', '')}] ${e.name} ${e.surname}`,\n  }));\n}\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const selectedOption = localStorage.getItem('selectedMentor');\n\n    this.state = {\n      selectedOption: JSON.parse(selectedOption),\n    };\n  }\n\n  componentDidMount() {\n    const { onChange } = this.props;\n    const { selectedOption } = this.state;\n    if (selectedOption) {\n      onChange(selectedOption);\n    }\n  }\n\n  handleChange = (selectedOption) => {\n    const { onChange } = this.props;\n    onChange(selectedOption);\n    localStorage.setItem('selectedMentor', JSON.stringify(selectedOption));\n    this.setState({ selectedOption });\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n\n      <Select\n        classNamePrefix=\"dropdown_\"\n        className=\"dropdown\"\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={getMentors(Data.mentorInfo)}\n        placeholder=\"Select mentor\"\n      />\n    );\n  }\n}\n\nDropdown.propTypes = {\n  onChange: PropTypes.func,\n};\nDropdown.defaultProps = {\n  onChange: () => {},\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction ResultTableHeader(props) {\n  const { students } = props;\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        {students.map(e => (\n          <TableCell key={e.studentNickname}>\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href={`https://github.com/${e.studentNickname}`}\n            >\n              {e.studentNickname}\n              <i className=\"fas fa-link\" />\n            </a>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nResultTableHeader.propTypes = {\n  students: PropTypes.arrayOf(PropTypes.shape({\n    studentNickname: PropTypes.string,\n  })),\n};\n\nResultTableHeader.defaultProps = {\n  students: [],\n};\n\nexport default ResultTableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction StudentResultCell(props) {\n  const { student, task, mentorScore } = props;\n  let className;\n  const score = mentorScore.find(e => e.taskName === task.taskName\n    && e.studentGithub\n      .toLowerCase()\n      .endsWith(student.studentNickname && student.studentNickname.toLowerCase()));\n  switch (task.taskStatus) {\n    case 'checked':\n      className = score && score.taskMark > 0 ? 'checked' : 'not_done';\n      break;\n    case 'checking':\n      className = score && score.taskMark > 0 ? 'checked' : 'checking';\n      break;\n    case 'in_progress':\n      className = score && score.taskMark > 0 ? 'checked' : 'in_progress';\n      break;\n    default:\n      className = 'todo';\n      break;\n  }\n  return <TableCell className={className} />;\n}\n\nStudentResultCell.propTypes = {\n  student: PropTypes.shape({}).isRequired,\n  task: PropTypes.shape({}).isRequired,\n  mentorScore: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default StudentResultCell;\n","import React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport { tasks, mentorScore } from '../assets/data.json';\nimport StudentResultCell from './StudentResultCell';\n\nfunction ResultTableBody(props) {\n  const { students } = props;\n\n  return (\n    <TableBody>\n      {tasks.map(task => (\n        <TableRow key={task.taskName}>\n          <TableCell scope=\"row\" padding=\"dense\">\n            <a href={task.taskLink} rel=\"noopener noreferrer\" target=\"_blank\">\n              {task.taskName}\n              <i className=\"fas fa-link\" />\n            </a>\n          </TableCell>\n          {students.map(student => (\n            <StudentResultCell\n              key={student.studentNickname}\n              student={student}\n              task={task}\n              mentorScore={mentorScore}\n            />\n          ))}\n        </TableRow>\n      ))}\n    </TableBody>\n  );\n}\n\nResultTableBody.propTypes = {\n  students: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default ResultTableBody;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport PropTypes from 'prop-types';\nimport ResultTableHeader from './ResultTableHeader';\nimport ResultTableBody from './ResultTableBody';\nimport Data from '../assets/data.json';\nimport './ResultTable.scss';\n\nfunction getStudents(selectedMentor) {\n  const { pairs } = Data;\n  const { value } = selectedMentor;\n  return pairs.filter(e => e.mentorNickname === value);\n}\n\nfunction ResultTable(props) {\n  const { selectedMentor } = props;\n\n  if (selectedMentor === null) {\n    return null;\n  }\n\n  const students = getStudents(selectedMentor);\n  return (\n    <div className=\"resultTable\">\n      <Table>\n        <ResultTableHeader students={students} />\n        <ResultTableBody students={students} />\n      </Table>\n    </div>\n  );\n}\n\nResultTable.propTypes = {\n  selectedMentor: PropTypes.shape({}),\n};\n\nResultTable.defaultProps = {\n  selectedMentor: null,\n};\n\nexport default ResultTable;\n","import React, { Component } from 'react';\nimport PageContainer from '../components/PageContainer';\nimport Dropdown from '../components/Dropdown';\nimport ResultTable from '../components/ResultTable';\n\nclass Home extends Component {\n    state = {\n      selectedMentor: null,\n    }\n\n    selectMentor(selectedMentor) {\n      this.setState({ selectedMentor });\n    }\n\n    render() {\n      const { selectedMentor } = this.state;\n\n      return (\n        <PageContainer>\n          <Dropdown onChange={(e) => { this.selectMentor(e); }} />\n          <ResultTable selectedMentor={selectedMentor} />\n        </PageContainer>);\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport PageContainer from '../components/PageContainer';\nimport rssImage from '../assets/rss.png';\nimport Context from '../firebase/context';\nimport './Landing.scss';\n\nfunction Landing(props) {\n  const { handleLoginUser } = props;\n\n  const userLogin = (firebase) => {\n    firebase.doSignInWithGithub().then((result) => {\n      handleLoginUser(result.user);\n    });\n  };\n\n  return (\n    <PageContainer>\n      <Grid container alignItems=\"center\" justify=\"center\" className=\"landingContent\" direction=\"row\" spacing={16}>\n        <Grid item xs={6} container justify=\"flex-end\">\n          <img src={rssImage} alt=\"rssLogo\" className=\"rssLogo\" />\n        </Grid>\n        <Grid item xs={6} container alignItems=\"flex-start\" justify=\"center\" direction=\"column\">\n          <Typography variant=\"subtitle2\" color=\"inherit\">\n            Welcome to Mentors dashboard.\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"inherit\">\n            Please login to proceed.\n          </Typography>\n          <Context.Consumer>\n            { firebase => <Button variant=\"contained\" color=\"secondary\" onClick={() => userLogin(firebase)}>Log In</Button> }\n          </Context.Consumer>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  );\n}\n\nLanding.propTypes = {\n  handleLoginUser: PropTypes.func.isRequired,\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport HeaderBar from './components/HeaderBar';\nimport Home from './pages/Home';\nimport Landing from './pages/Landing';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    loggedInUser: null,\n  }\n\n  handleLoginUser(loggedInUser) {\n    this.setState({ loggedInUser });\n  }\n\n  render() {\n    const { loggedInUser } = this.state;\n    return (\n      <div className=\"App\">\n        <HeaderBar handleLoginUser={u => this.handleLoginUser(u)} loggedInUser={loggedInUser} />\n        {loggedInUser\n          ? <Home loggedInUser={loggedInUser} />\n          : <Landing handleLoginUser={u => this.handleLoginUser(u)} loggedInUser={loggedInUser} />\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst config = {\n  apiKey: 'AIzaSyCI0paQvRwwOMOtIxTow0jRMQBfL0nb8gw',\n  authDomain: 'mentors-dashboard.firebaseapp.com',\n  databaseURL: 'https://mentors-dashboard.firebaseio.com',\n  projectId: 'mentors-dashboard',\n  storageBucket: 'mentors-dashboard.appspot.com',\n  messagingSenderId: '324082750279',\n};\nexport default config;\n","import FirebaseContext from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext };\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport config from '../config/firebase-config';\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n\n    this.githubProvider = new app.auth.GithubAuthProvider();\n  }\n\n  doSignInWithGithub = () => this.auth.signInWithPopup(this.githubProvider);\n\n  doSignOut = () => this.auth.signOut();\n}\n\nexport default Firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}